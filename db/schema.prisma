// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

// --------------------------------------

model User {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  discordId String   @unique
  name      String   @unique

  role     Role      @default(NOT_VERIFIED)
  sessions Session[]
  Post     Post[]
  Event    Event[]
}

model Session {
  id                 Int       @id @default(autoincrement())
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  expiresAt          DateTime?
  handle             String    @unique
  hashedSessionToken String?
  antiCSRFToken      String?
  publicData         String?
  privateData        String?

  user   User? @relation(fields: [userId], references: [id])
  userId Int?
}

//     See: https://blitzjs.com/docs/database-overview#switch-to-postgresql

enum Role {
  ADMIN
  VERIFIED
  NOT_VERIFIED
}

model Post {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  content   String
  image     String?
  title     String   @unique

  userId Int
  user   User    @relation(fields: [userId], references: [id])
  Event  Event[]
}

model Permission {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String   @unique

  role Role @default(NOT_VERIFIED)
}

model Event {
  id          Int      @id @default(autoincrement())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  date        DateTime
  description String?
  title       String   @unique

  userId Int?
  postId Int?
  user   User? @relation(fields: [userId], references: [id])
  post   Post? @relation(fields: [postId], references: [id])
}
